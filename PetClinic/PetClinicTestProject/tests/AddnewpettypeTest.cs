// Generated by Selenium IDE
using System;
using OpenQA.Selenium;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using SeleniumExtras.WaitHelpers;
using NUnit.Allure.Attributes;

namespace PetClinicTestProject
{
    [TestFixture]
    [Parallelizable]
    public class AddnewpettypeTest : Hooks
    {
        public AddnewpettypeTest(): base(BrowserType.Firefox) {}
        [Test]
        [TestCase("new pet")]
        [TestCase("some pet")]
        [AllureSuite("Check add new pet type functionality")]
        public void addnewpettype(string petName)
        {
            driver.FindElement(By.CssSelector("li:nth-child(4) > a")).Click();
            Helpers.ScrollToBottom(driver, "li:nth-child(4) > a");
            var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
            driver.FindElement(By.CssSelector("tr:nth-child(6) .editPet")).Click();
            driver.FindElement(By.CssSelector("app-pettype-edit > .container-fluid")).Click();
            pages.AddNewPetType.petTypeNameField.Clear();
            var newName = PetTypes.PetTypes[0].Name;
            pages.AddNewPetType.petTypeNameField.SendKeys(newName);
            driver.FindElement(By.CssSelector(".updatePetType")).Click();
            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector(".addPet")));
            pages.AddNewPetType.addPetButton.Click();
            Helpers.ScrollToBottom(driver, ".addPet");
            pages.AddNewPetType.changeNameAndSave(pages.AddNewPetType.petTypeNameField, petName);
            Assert.That(driver.FindElement(By.CssSelector("tr:nth-last-child(1) > td > input")).GetAttribute("ng-reflect-model"), Is.EqualTo(newName));
        }
    }
}